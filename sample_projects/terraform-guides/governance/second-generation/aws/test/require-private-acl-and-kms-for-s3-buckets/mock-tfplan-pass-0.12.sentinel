import "strings"
import "types"

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"aws_s3_bucket": {
				"bucket": {
					0: {
						"applied": {
							"acl":                       "private",
							"bucket":                    "roger-012-test",
							"bucket_prefix":             null,
							"cors_rule":                 [],
							"force_destroy":             false,
							"lifecycle_rule":            [],
							"logging":                   [],
							"object_lock_configuration": [],
							"policy":                    null,
							"replication_configuration": [],
							"server_side_encryption_configuration": [
								{
									"rule": [
										{
											"apply_server_side_encryption_by_default": [
												{
													"kms_master_key_id": "arn:aws:kms:us-east-1:753646501470:key/00c892e8-40c4-4048-a650-0f755876503d",
													"sse_algorithm":     "aws:kms",
												},
											],
										},
									],
								},
							],
							"tags": {
								"Owner": "roger@hashicorp.com",
								"name":  "Roger Test Bucket",
							},
							"website": [],
						},
						"destroy": false,
						"diff": {
							"acceleration_status": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"acl": {
								"computed": false,
								"new":      "private",
								"old":      "",
							},
							"arn": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"bucket": {
								"computed": false,
								"new":      "roger-012-test",
								"old":      "",
							},
							"bucket_domain_name": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"bucket_prefix": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"bucket_regional_domain_name": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"cors_rule.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"force_destroy": {
								"computed": false,
								"new":      "false",
								"old":      "",
							},
							"hosted_zone_id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"lifecycle_rule.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"logging.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"object_lock_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"policy": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"region": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"replication_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"request_payer": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"server_side_encryption_configuration.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"server_side_encryption_configuration.0.%": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"server_side_encryption_configuration.0.rule.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"server_side_encryption_configuration.0.rule.0.%": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"server_side_encryption_configuration.0.rule.0.apply_server_side_encryption_by_default.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"server_side_encryption_configuration.0.rule.0.apply_server_side_encryption_by_default.0.%": {
								"computed": false,
								"new":      "2",
								"old":      "",
							},
							"server_side_encryption_configuration.0.rule.0.apply_server_side_encryption_by_default.0.kms_master_key_id": {
								"computed": false,
								"new":      "arn:aws:kms:us-east-1:753646501470:key/00c892e8-40c4-4048-a650-0f755876503d",
								"old":      "",
							},
							"server_side_encryption_configuration.0.rule.0.apply_server_side_encryption_by_default.0.sse_algorithm": {
								"computed": false,
								"new":      "aws:kms",
								"old":      "",
							},
							"tags.%": {
								"computed": false,
								"new":      "2",
								"old":      "",
							},
							"tags.Owner": {
								"computed": false,
								"new":      "roger@hashicorp.com",
								"old":      "",
							},
							"tags.name": {
								"computed": false,
								"new":      "Roger Test Bucket",
								"old":      "",
							},
							"versioning.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"website.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"website_domain": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"website_endpoint": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "0.12.13"

variables = {
	"aws_region":  "us-east-1",
	"bucket_acl":  "private",
	"bucket_name": "roger-012-test",
}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
