import "strings"
import "types"

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"aws_launch_configuration": {
				"as_conf": {
					0: {
						"applied": {
							"associate_public_ip_address":      false,
							"enable_monitoring":                true,
							"ephemeral_block_device":           [],
							"iam_instance_profile":             null,
							"image_id":                         "ami-00d4e9ff62bc40e03",
							"instance_type":                    "t2.small",
							"name":                             "web_config",
							"name_prefix":                      null,
							"placement_tenancy":                null,
							"security_groups":                  null,
							"spot_price":                       null,
							"user_data":                        null,
							"user_data_base64":                 null,
							"vpc_classic_link_id":              null,
							"vpc_classic_link_security_groups": null,
						},
						"destroy": false,
						"diff": {
							"associate_public_ip_address": {
								"computed": false,
								"new":      "false",
								"old":      "",
							},
							"ebs_block_device.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"ebs_optimized": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"enable_monitoring": {
								"computed": false,
								"new":      "true",
								"old":      "",
							},
							"ephemeral_block_device.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"iam_instance_profile": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"image_id": {
								"computed": false,
								"new":      "ami-00d4e9ff62bc40e03",
								"old":      "",
							},
							"instance_type": {
								"computed": false,
								"new":      "t2.small",
								"old":      "",
							},
							"key_name": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"name": {
								"computed": false,
								"new":      "web_config",
								"old":      "",
							},
							"name_prefix": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"placement_tenancy": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"root_block_device.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"security_groups": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"spot_price": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"user_data": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"user_data_base64": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"vpc_classic_link_id": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"vpc_classic_link_security_groups": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
						},
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "0.12.3"

variables = {}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
