import "strings"
import "types"

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"aws_instance": {
				"ubuntu": {
					0: {
						"applied": {
							"ami": "ami-2e1ef954",
							"associate_public_ip_address":          true,
							"availability_zone":                    "us-east-1b",
							"credit_specification":                 [],
							"disable_api_termination":              null,
							"ebs_optimized":                        null,
							"get_password_data":                    false,
							"iam_instance_profile":                 null,
							"instance_initiated_shutdown_behavior": null,
							"instance_type":                        "m5.large",
							"key_name":                             "roger-vault",
							"monitoring":                           null,
							"source_dest_check":                    true,
							"tags": {
								"Name":  "roger-ec2-demo",
								"owner": "roger@hashicorp.com",
								"ttl":   "24",
							},
							"timeouts":         null,
							"user_data":        null,
							"user_data_base64": null,
						},
						"destroy": false,
						"diff": {
							"ami": {
								"computed": false,
								"new":      "ami-2e1ef954",
								"old":      "",
							},
							"arn": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"associate_public_ip_address": {
								"computed": false,
								"new":      "true",
								"old":      "",
							},
							"availability_zone": {
								"computed": false,
								"new":      "us-east-1b",
								"old":      "",
							},
							"cpu_core_count": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"cpu_threads_per_core": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"credit_specification.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"disable_api_termination": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"ebs_block_device.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"ebs_optimized": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"ephemeral_block_device.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"get_password_data": {
								"computed": false,
								"new":      "false",
								"old":      "",
							},
							"host_id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"iam_instance_profile": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"instance_initiated_shutdown_behavior": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"instance_state": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"instance_type": {
								"computed": false,
								"new":      "m5.large",
								"old":      "",
							},
							"ipv6_address_count": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"ipv6_addresses.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"key_name": {
								"computed": false,
								"new":      "roger-vault",
								"old":      "",
							},
							"monitoring": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"network_interface.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"network_interface_id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"password_data": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"placement_group": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"primary_network_interface_id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"private_dns": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"private_ip": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"public_dns": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"public_ip": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"root_block_device.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"security_groups.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"source_dest_check": {
								"computed": false,
								"new":      "true",
								"old":      "",
							},
							"subnet_id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"tags.%": {
								"computed": false,
								"new":      "3",
								"old":      "",
							},
							"tags.Name": {
								"computed": false,
								"new":      "roger-ec2-demo",
								"old":      "",
							},
							"tags.owner": {
								"computed": false,
								"new":      "roger@hashicorp.com",
								"old":      "",
							},
							"tags.ttl": {
								"computed": false,
								"new":      "24",
								"old":      "",
							},
							"tenancy": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"timeouts": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"user_data": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"user_data_base64": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"volume_tags.%": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"vpc_security_group_ids.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "0.12.3"

variables = {
	"ami_id":           "ami-2e1ef954",
	"aws_region":       "us-east-1",
	"instance_type":    "m5.large",
	"key_name":         "roger-vault",
	"name":             "roger-ec2-demo",
}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
