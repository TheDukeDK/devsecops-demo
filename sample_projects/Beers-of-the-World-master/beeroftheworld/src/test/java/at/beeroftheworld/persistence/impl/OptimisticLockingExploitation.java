package at.beeroftheworld.persistence.impl;

import org.junit.Test;
import static org.junit.Assert.fail;

import at.beeroftheworld.model.BeerBrand;
import at.beeroftheworld.persistence.BrandDao;
import at.beeroftheworld.persistence.BrandDaoTest;
import at.beeroftheworld.persistence.OptimisticLockingException;

import static org.hamcrest.MatcherAssert.*;
import static org.hamcrest.Matchers.*;

public class OptimisticLockingExploitation extends BrandDaoTest {
	
	@Test
	public void shouldProvokeOptimisticLockingException() {
		// Arrange (see setup)
		BrandDao dao = getTestDao();
		dao.insert(getExpectedBrand());
		BeerBrand localBrand = findActualToExpected();
		BeerBrand updatedBrand = findActualToExpected();
		
		// Act
		int yof = updatedBrand.getYearOfFounding();
		localBrand.setYearOfFounding(yof+1);
		updatedBrand.setYearOfFounding(yof+2);
		dao.update(updatedBrand);
		updatedBrand = findActualToExpected();
		try {
			dao.update(localBrand);
		} 
		// Assert
		catch(OptimisticLockingException ole) {
			assertThat(localBrand, equalTo(ole.getLocalDocument()));
			assertThat(updatedBrand, equalTo(ole.getServerDocument()));
			return;
		}
		fail("no optimistic locking exception occurd");
	}
	
}
