version: '3'

services:
  traefik:
    image: "traefik:v2.3.3"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--api.insecure=true" # To secure the api comment this out.
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.ssh-gitlab.address=:22"
    restart: unless-stopped
    stop_grace_period: 30s
    networks:
      default:
        aliases:
          - "jenkins.local.net"
          - "sonarqube.local.net"
          - "gitlab.local.net"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.local.net`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      # Uncomment below to secure the Dashboard with user: admin and password: password
      #- "traefik.http.routers.dashboard.middlewares=auth"
      #- "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$fYN6zOqK$$OX.AGKf1T/z4UcqfKSsg4."
    ports:
      - "80:80"
      - "22:22"
  jenkins.local.net:
    build: jenkins
    container_name: jenkins
    image: jenkins-lts:2.249.3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.router1.rule=Host(`$JENKINS_SERVER_NAME`)"
      - "traefik.http.routers.router1.entrypoints=web"
      - "traefik.http.routers.router1.service=jenkins"
      - "traefik.http.services.jenkins.loadbalancer.server.port=8083"
    networks:
      default:
        aliases:
          - "sonarqube.local.net"
          - "gitlab.local.net"
    environment:
      - JENKINS_SLAVE_AGENT_PORT=50000
      - JENKINS_OPTS="--httpPort=8083"
      - JENKINS_ADMIN_USER=$JENKINS_ADMIN_USER
      - JENKINS_ADMIN_PASSWORD=$JENKINS_ADMIN_PASSWORD
      - GITLAB_ROOT_PASSWORD=$GITLAB_ROOT_PASSWORD
      - CASC_JENKINS_CONFIG=$CASC_JENKINS_CONFIG
    volumes:
      - jenkins_data:/var/jenkins_home
  sonarqube.local.net:
    build: sonarqube
    container_name: sonarqube
    image: sonarqube-community:8.5.1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.router2.rule=Host(`$SONARQUBE_SERVER_NAME`)"
      - "traefik.http.routers.router2.entrypoints=web"
      - "traefik.http.routers.router2.service=sonarqube"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"
    networks:
      default:
        aliases:
          - "jenkins.local.net"
          - "gitlab.local.net"
    environment:
      - SONARQUBE_USER_NAME=$SONARQUBE_USER_NAME
      - SONARQUBE_USER_GROUP=$SONARQUBE_USER_GROUP
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonar-postgres/sonar
      - SONARQUBE_JDBC_USERNAME=$SONARQUBE_DB_USER
      - SONARQUBE_JDBC_PASSWORD=$SONARQUBE_DB_PASSWORD
    ports:
      - "9000:9000"
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_logs:/opt/sonarqube/logs
    depends_on:
      - sonar-postgres
  sonar-postgres:
    image: postgres:11.10-alpine
    container_name: pg_sonarqube
    ports:
      - $SONARQUBE_DB_PORT:5432
    networks:
      default:
        aliases:
          - "sonarqube.local.net"
    environment:
      - POSTGRES_DB=$SONARQUBE_DB
      - POSTGRES_USER=$SONARQUBE_DB_USER
      - POSTGRES_PASSWORD=$SONARQUBE_DB_PASSWORD
    volumes:
      - sonar_db_volume:/var/lib/postgresql/data
    restart: always
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
  gitlab.local.net:
    container_name: gitlab
    image: 'gitlab/gitlab-ee:13.5.3-ee.0'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.router3.rule=Host(`$GITLAB_SERVER_NAME`)"
      - "traefik.http.routers.router3.entrypoints=web"
      - "traefik.http.routers.router3.service=gitlab"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
      # SSH
      - "traefik.tcp.routers.router4.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.router4.entrypoints=ssh-gitlab"
      - "traefik.tcp.routers.router4.service=ssh"
      - "traefik.tcp.services.ssh.loadbalancer.server.port=22"
    restart: unless-stopped
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url "${GITLAB_SERVER_FQDN}"
        gitlab_rails['initial_root_password'] = "${GITLAB_ROOT_PASSWORD}"
    networks:
      default:
        aliases:
          - "jenkins.local.net"
          - "sonarqube.local.net"
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
volumes:
  jenkins_data: {}
  sonar_data: {}
  sonar_logs: {}
  sonar_db_volume: {}
  gitlab_config: {}
  gitlab_logs: {}
  gitlab_data: {}
