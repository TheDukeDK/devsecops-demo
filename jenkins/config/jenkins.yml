jenkins:
  systemMessage: | 
    Automatically configured(boostrapped) Jenkins docker instance. 
    When making changes to the system configuration consider if they should be part of the bootstrapping.

  markupFormatter:
    rawHtml:
      disableSyntaxHighlighting: true
  
  primaryView:
    all:
      name: "all"
  
  mode: NORMAL
  numExecutors: 1
  quietPeriod: 5
  scmCheckoutRetryCount: 1

  slaveAgentPort: 50000
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  
  views:
  - all:
      name: "all"
  
  globalNodeProperties:
    - envVars:
        env:
          - key: SONARQUBE_SERVER_NAME
            value: "http://sonarqube.local.net"
  
  # Security Configurations
  securityRealm:
    local:
      allowsSignup: false
      users:
      - id: ${JENKINS_ADMIN_USER}
        password: ${JENKINS_ADMIN_PASSWORD}

  crumbIssuer: 
    standard:
       excludeClientIPFromCrumb: false

  remotingSecurity:
    enabled: true
 
  authorizationStrategy:
    globalMatrix:
      permissions:
      - "Agent/Build:anonymous"
      - "Agent/Build:authenticated"
      - "Agent/Configure:authenticated"
      - "Agent/Connect:anonymous"
      - "Agent/Connect:authenticated"
      - "Agent/Create:authenticated"
      - "Agent/Delete:authenticated"
      - "Agent/Disconnect:authenticated"
      - "Artifactory/Promote:authenticated"
      - "Artifactory/Release:authenticated"
      - "Credentials/Create:authenticated"
      - "Credentials/Delete:authenticated"
      - "Credentials/ManageDomains:authenticated"
      - "Credentials/Update:authenticated"
      - "Credentials/View:authenticated"
      - "Job/Build:anonymous"
      - "Job/Build:authenticated"
      - "Job/Cancel:anonymous"
      - "Job/Cancel:authenticated"
      - "Job/Configure:anonymous"
      - "Job/Configure:authenticated"
      - "Job/Create:anonymous"
      - "Job/Create:authenticated"
      - "Job/Delete:authenticated"
      - "Job/Discover:anonymous"
      - "Job/Discover:authenticated"
      - "Job/Move:anonymous"
      - "Job/Move:authenticated"
      - "Job/Read:anonymous"
      - "Job/Read:authenticated"
      - "Job/Workspace:anonymous"
      - "Job/Workspace:authenticated"
      - "Lockable Resources/Reserve:authenticated"
      - "Lockable Resources/Unlock:authenticated"
      - "Lockable Resources/View:authenticated"
      - "Metrics/HealthCheck:authenticated"
      - "Metrics/ThreadDump:authenticated"
      - "Metrics/View:authenticated"
      - "Overall/Administer:authenticated"
      - "Overall/Read:anonymous"
      - "Overall/Read:authenticated"
      - "Run/Delete:anonymous"
      - "Run/Delete:authenticated"
      - "Run/Replay:anonymous"
      - "Run/Replay:authenticated"
      - "Run/Update:anonymous"
      - "Run/Update:authenticated"
      - "SCM/Tag:anonymous"
      - "SCM/Tag:authenticated"
      - "View/Configure:anonymous"
      - "View/Configure:authenticated"
      - "View/Create:anonymous"
      - "View/Create:authenticated"
      - "View/Delete:anonymous"
      - "View/Delete:authenticated"
      - "View/Read:anonymous"
      - "View/Read:authenticated"
  
  disableRememberMe: false

tool:
  git:
    installations:
    - home: "/usr/bin/git"
      name: "Default"

  jdk:
    installations:
    - home: "/usr/local/openjdk-8"
      name: "openjdk-8"
  
  maven:
    installations:
    - home: "/usr/share/maven"
      name: "maven-3.3.9"

  msBuildSQRunnerInstallation:
    installations:
    - name: "sonar-scanner-net-core-2.0"
      home: ""
      properties:
      - installSource:
          installers:
          - msBuildSonarQubeRunnerInstaller:
              id: "5.0.4.24009-netcore"
          - msBuildSonarQubeRunnerInstaller:
              id: "5.0.4.24009"

  # Can't get JCasC to handle snyk :-(
  #snyk:
  #  installations:
  #  - home: ""
  #  - name: "snyk"
  #    properties:
  #    - installSource:
  #        installers:
  #        - snykInstaller:
  #            #updatePolicyIntervalHours: 24
  #            #version: "latest"

  sonarRunnerInstallation:
    installations:
    - name: "sonar-scanner-4.5.0"
      home: ""
      properties:
      - installSource:
          installers:
          - sonarRunnerInstaller:
              id: "4.5.0.2216"

  dependency-check:
    installations:
    - home: "/usr/local/bin/dependency-check"
      name: "dependency-check"
  

unclassified:
  location:
    url: http://jenkins.local.net

  sonarGlobalConfiguration:
    installations:
      - name: "sonarqube.local.net"
        serverUrl: "http://sonarqube.local.net"
        credentialsId: "token-sonarqube"
        triggers:
          skipScmCause: true
          skipUpstreamCause: true
  
  gitLabConnectionConfig:
    connections:
    - apiTokenId: "token-gitlab"
      clientBuilderId: "autodetect"
      connectionTimeout: 10
      ignoreCertificateErrors: true
      name: "Local GitLab"
      readTimeout: 10
      url: "http://gitlab.local.net"

  # Tried to set up a groovy parser to work with Next Gen Warnings plugin to threshold NPM Audit output.
  # Followed this guide: https://uko.codes/npm-audit-jenkins-warnings-next-generation-custom-groovy-parser
  # Doesn't work. Also the npm audit option --parseable seems to be deprecated in later versions of npm.
  # Kept here for reference. But for this to be an option npm audit output needs to be in JSON format and
  # a real parser would need to be added to the warnings plugin. 
  # See: https://github.com/jenkinsci/analysis-model/tree/1d88989fb37156378b4b8e24620d580fc5a9415a/src/main/java/edu/hm/hafner/analysis/parser
  warningsParsers:
    parsers:
      - name: "NPM Audit Parser"
        id: npm-audit
        regexp: '\w+\t(\S+)\t(\w+)\t(\S| )+\t((\S| )+)\t(\S+)\t(\S+)'
        script: |
          import edu.hm.hafner.analysis.Severity
          builder.setFileName(matcher.group(7))
          .setCategory(matcher.group(4))
          .setMessage(matcher.group(6))
          .buildOptional()
          return builder.buildOptional();
        example: "update\tlodash\tlow\tnpm update lodash --depth 9\tPrototype Pollution\t\
                  https://npmjs.com/advisories/1523\telasticsearch>lodash\tN"

security:
  queueItemAuthenticator:
    authenticators:
    - global:
        strategy: "anonymousAuthorizationStrategy"

  GlobalJobDslSecurityConfiguration:
    useScriptSecurity: false

jobs:
  - script: |
      job('seed') {
        description('Run to create/restore all pipelines.')
        scm {
          git {
            remote {
              name('origin')
              url('http://gitlab.local.net/root/devsecops-demo.git')
              credentials('root-gitlab')
            }
            branch('master')
          }
        }
        steps {
          dsl {
            external('pipelines/dsl/dsl.groovy')
          }
        }
      }
